{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/filter/filter.component.ts","./src/app/components/filter/filter.component.html","./src/app/components/item/item.component.ts","./src/app/components/item/item.component.html","./src/app/components/list-header/list-header.component.ts","./src/app/components/list-header/list-header.component.html","./src/app/components/list-header/list-header.config.ts","./src/app/components/list/list.component.ts","./src/app/components/list/list.component.html","./src/app/models/list-series.model.ts","./src/app/services/get-list.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'series-client-app';\n}\n","<main class=\"main\">\n  <app-filter></app-filter>\n  <app-list></app-list>\n</main>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatPaginatorModule } from '@angular/material/paginator';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FilterComponent } from './components/filter/filter.component';\nimport { ListComponent } from './components/list/list.component';\nimport { ListHeaderComponent } from './components/list-header/list-header.component';\nimport { ItemComponent } from './components/item/item.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FilterComponent,\n    ListComponent,\n    ListHeaderComponent,\n    ItemComponent\n  ],\n\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatPaginatorModule,\n    BrowserAnimationsModule\n  ],\n\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { fromEvent } from 'rxjs';\nimport { debounceTime, filter, map, distinctUntilChanged } from 'rxjs/operators';\nimport { IDataSeries } from 'src/app/models/list-series.model';\nimport { GetListService } from 'src/app/services/get-list.service';\n\n@Component({\n  selector: 'app-filter',\n  templateUrl: './filter.component.html',\n  styleUrls: ['./filter.component.scss']\n})\n\nexport class FilterComponent implements OnInit {\n  @ViewChild('inputTag', { static: false }) public inputElem: ElementRef;\n\n  public searchName: string;\n  public listSeries: Array<IDataSeries>;\n  public listGenres: Array<string>;\n  public listDates: Array<any>;\n  public date: string | number;\n  public genre: string;\n\n  private response: IDataSeries[];\n  private changedResponse: IDataSeries[];\n  private firstCounter: number = 0;\n  private secondCounter: number = 0;\n  private selectedGenre: string;\n  private selectedDate: string;\n\n  constructor (private getListService: GetListService) { }\n\n  ngOnInit(): void {\n    this.getListService.valueSeries.subscribe((data: Array<IDataSeries>) => {\n      this.listSeries = data;\n      this.filterListGenres(this.listSeries);\n      this.filterListDates(this.listSeries);\n    });\n  }\n\n  public ngAfterViewInit(): void {\n    fromEvent(this.inputElem.nativeElement, 'keyup')\n      .pipe(\n        debounceTime(700),\n        map((event: InputEvent) => (<HTMLInputElement>event.target).value),\n        filter(value => value.length > 2 || value.length === 0),\n        distinctUntilChanged(),\n      )\n      .subscribe(value => {\n        this.filterName(value);\n      });\n  }\n\n  public filter(value: string, id: string) {\n    let response = this.getListService.getResponse();\n\n    id === \"genre\" ? this.selectedGenre = value : this.selectedDate = value;\n\n    response = this.filterGenre(this.selectedGenre, response);\n    response = this.filterDate(this.selectedDate, response);\n\n    this.getListService.transferData(response);\n  }\n\n  private filterName(value: string) {\n    this.response = this.getListService.getResponse();\n    if (!value) {\n      this.changedResponse = this.response;\n    } else {\n      this.changedResponse = this.response.filter(\n        (el) => el.name.toLowerCase().indexOf(value.toLowerCase()) >= 0\n      );\n    }\n    this.getListService.transferData(this.changedResponse);\n  }\n\n  private filterListGenres(value: Array<IDataSeries>) {\n    if (this.firstCounter > 1) return;\n    let arrGenres: Array<string> = [ \"All genres\" ];\n    value.forEach(el => el.genre.forEach(item => arrGenres.push(item)));\n    this.listGenres = Array.from(new Set(arrGenres));\n    this.selectedGenre = this.listGenres[0];\n    this.firstCounter++;\n  }\n\n  private filterListDates(value: Array<IDataSeries>) {\n    if (this.secondCounter > 1) return;\n    let arrDates: Array<any> = [];\n    value.forEach(el => arrDates.push(Number(el.premiere.slice(-4))));\n    arrDates.sort((a, b) => a - b);\n    this.listDates = Array.from(new Set(arrDates));\n    this.listDates.unshift(\"All dates\");\n    this.selectedDate = this.listDates[0];\n    this.secondCounter++;\n  }\n\n  private filterGenre(value: string, response: IDataSeries[]): IDataSeries[] {\n    return value === \"All genres\" ?\n      response : response.filter((el) => el.genre.indexOf(value) >= 0);\n  }\n\n  private filterDate(value: string, response: IDataSeries[]): IDataSeries[] {\n    return value === \"All dates\" ?\n      response : response.filter((el) => el.premiere.indexOf(value) >= 0);\n  }\n}\n","<div class=\"form-name filter\">\n  <input type=\"text\" #inputTag class=\"form-field\" placeholder=\"Name\" name=\"name\" [(ngModel)]=\"searchName\">\n  <i class=\"fas fa-search\"></i>\n</div>\n\n<div class=\"box-select filter\">\n    <select id=\"genre\" class=\"select\" (change)=\"filter($event.target.value, $event.target.id)\" >\n    <option class=\"option\" *ngFor=\"let genre of listGenres\">{{ genre }}</option>\n  </select>\n  <div class=\"select-arrow\"></div>\n</div>\n\n<div class=\"box-select filter\">\n  <select id=\"date\" class=\"select\" (change)=\"filter($event.target.value, $event.target.id)\" >\n    <option *ngFor=\"let date of listDates\">{{ date }}</option>\n  </select>\n  <div class=\"select-arrow\"></div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\n\nimport { IDataSeries } from 'src/app/models/list-series.model';\n\n@Component({\n  selector: 'app-item',\n  templateUrl: './item.component.html',\n  styleUrls: ['./item.component.scss']\n})\n\nexport class ItemComponent implements OnInit {\n  @Input() public dataSeries: IDataSeries;\n\n  public listGenres: Array<string>;\n  public listNetworks: Array<string>;\n  public genre: string;\n  public network: string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.listGenres = this.dataSeries.genre;\n    this.listNetworks = this.dataSeries.network;\n  }\n}\n","<div class=\"box-name-genres column\">\n  <div class=\"series-name\">{{ dataSeries.name }}</div>\n  <div class=\"box-genres\">\n    <span class=\"list-values genre\" *ngFor=\"let genre of listGenres\" [ngClass]=\"genre\">{{ genre }}</span>\n  </div>\n</div>\n<div class=\"series-season column\">{{ dataSeries.season }}</div>\n<div class=\"series-networks column\">\n  <span class=\"list-values\" *ngFor=\"let network of listNetworks\">{{ network }}</span>\n</div>\n<div class=\"series-premiere column\">{{ dataSeries.premiere }}</div>\n","import { Component, OnInit } from '@angular/core';\nimport { IDataSeries, HeaderColumns, ColumnsType, IListColumns } from 'src/app/models/list-series.model';\nimport { GetListService } from 'src/app/services/get-list.service';\nimport { ListColumns } from './list-header.config';\n\n@Component({\n  selector: 'app-list-header',\n  templateUrl: './list-header.component.html',\n  styleUrls: ['./list-header.component.scss']\n})\n\nexport class ListHeaderComponent implements OnInit {\n  public listColumns: IListColumns[] = ListColumns;\n  private listSeries: IDataSeries[];\n\n  constructor (private getListService: GetListService) { }\n\n  ngOnInit(): void {\n    this.getListService.valueSeries.subscribe((data: Array<IDataSeries>) => {\n      this.listSeries = data;\n    });\n  }\n\n  public sortData(type: ColumnsType, name: HeaderColumns, directionSort: string): void {\n    let changedResponse: IDataSeries[];\n\n    if (type === ColumnsType.string) {\n      changedResponse = this.sortDataByString(name, directionSort, this.listSeries);\n    }\n    else if (type === ColumnsType.number) {\n      changedResponse = this.sortDataByNumber(name, directionSort, this.listSeries);\n    }\n    else if (type === ColumnsType.date) {\n      changedResponse = this.sortDataByDate(name, directionSort, this.listSeries);\n    }\n\n    this.getListService.transferData(changedResponse);\n  }\n\n  private sortDataByString(columnName: HeaderColumns, directionSort: string, arr: IDataSeries[]): IDataSeries[] {\n    return arr.sort((a, b) => {\n      if (directionSort === \"up\") {\n        return a[columnName] > b[columnName] ? 1 : -1;\n      }\n      if (directionSort === \"down\") {\n        return a[columnName] > b[columnName] ? -1 : 1;\n      };\n    });\n  }\n\n  private sortDataByNumber(columnName: HeaderColumns, directionSort: string, arr: IDataSeries[]): IDataSeries[] {\n    return arr.sort((a, b) => {\n      if (directionSort === \"up\") {\n        return Number(a[columnName]) - Number(b[columnName]);\n      }\n      if (directionSort === \"down\") {\n        return Number(b[columnName]) - Number(a[columnName]);\n      };\n    });\n  }\n\n  private sortDataByDate(columnName: HeaderColumns, directionSort: string, arr: IDataSeries[]): IDataSeries[] {\n    return arr.sort((a, b) => {\n      if (directionSort === \"up\") {\n        return this.changeDateFormat(a[columnName] as string) >\n        this.changeDateFormat(b[columnName] as string) ? 1 : -1;\n      }\n      if (directionSort === \"down\") {\n        return this.changeDateFormat(a[columnName] as string) >\n        this.changeDateFormat(b[columnName] as string) ? -1 : 1;\n      };\n    });\n  }\n\n  private changeDateFormat(date: string) {\n    return Date.parse(date.split(\".\").reverse().join('-'));\n  }\n}\n","<div class=\"column-header\" *ngFor=\"let column of listColumns\" [ngClass]=\"column.class\">\n  <span>{{ column.name | titlecase }}</span>\n  <span class=\"sort-arrow\">\n    <i class=\"fas fa-angle-up\" (click)=\"sortData(column.type, column.name, 'up')\"></i>\n    <i class=\"fas fa-angle-down\" (click)=\"sortData(column.type, column.name, 'down')\"></i>\n  </span>\n</div>\n","import { IListColumns, HeaderColumns, ColumnsType } from 'src/app/models/list-series.model';\r\n\r\nexport const ListColumns: IListColumns[] = [\r\n  {\r\n    name: HeaderColumns.name,\r\n    class: `col-${HeaderColumns.name}`,\r\n    type: ColumnsType.string,\r\n  },\r\n  {\r\n    name: HeaderColumns.season,\r\n    class: `col-${HeaderColumns.season}`,\r\n    type: ColumnsType.number,\r\n  },\r\n  {\r\n    name: HeaderColumns.network,\r\n    class: `col-${HeaderColumns.network}`,\r\n    type: ColumnsType.string,\r\n  },\r\n  {\r\n    name: HeaderColumns.premiere,\r\n    class: `col-${HeaderColumns.premiere}`,\r\n    type: ColumnsType.date,\r\n  },\r\n]\r\n","import { Component, OnInit } from '@angular/core';\nimport { IDataSeries } from 'src/app/models/list-series.model';\nimport { GetListService } from 'src/app/services/get-list.service';\nimport { PageEvent } from '@angular/material/paginator';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.scss']\n})\n\nexport class ListComponent implements OnInit {\n  public dataItem: IDataSeries;\n  public listSeries: Array<IDataSeries>;\n  public lowValue: number = 0;\n  public highValue: number = 10;\n\n  constructor(private getListService: GetListService) { }\n\n  public ngOnInit(): void {\n    this.getListService.getListSeries();\n    this.getListService.valueSeries.subscribe((data: Array<IDataSeries>) => {\n      this.listSeries = data;\n    });\n  }\n\n  public getPaginatorData(event: PageEvent): PageEvent {\n    this.lowValue = event.pageIndex * event.pageSize;\n    this.highValue = this.lowValue + event.pageSize;\n    return event;\n  }\n}\n","<app-list-header></app-list-header>\n<app-item *ngFor=\"let dataItem of (listSeries | slice: lowValue : highValue)\" [dataSeries]=\"dataItem\">\n</app-item>\n<mat-paginator [length]=\"listSeries.length\" pageSize=10 (page)=\"getPaginatorData($event)\"\n  [pageSizeOptions]=\"[5, 10, 25]\" showFirstLastButtons=\"true\">\n</mat-paginator>\n","export interface IListSeries {\n  list: Array<IDataSeries>;\n}\n\nexport interface IDataSeries {\n  name: string;\n  genre: Array<string>;\n  season: number;\n  network: Array<string>,\n  premiere: string;\n}\n\nexport interface IListColumns {\n  name: HeaderColumns;\n  class: string;\n  type: ColumnsType;\n}\n\nexport enum HeaderColumns {\n  name = \"name\",\n  season = \"season\",\n  network = \"network\",\n  premiere = \"premiere\"\n}\n\nexport enum ColumnsType {\n  string,\n  number,\n  date\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, BehaviorSubject } from 'rxjs';\n\nimport { IDataSeries, IListSeries } from 'src/app/models/list-series.model';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class GetListService {\n  private listSeriesUrl: string = 'assets/series.json';\n  public response: IDataSeries[];\n  public valueSeries$: BehaviorSubject<Array<IDataSeries>> = new BehaviorSubject<Array<IDataSeries>>([]);\n  public valueSeries: Observable<Array<IDataSeries>> = this.valueSeries$.asObservable();\n\n  constructor(private http: HttpClient) { }\n\n  public getListSeries(): void {\n    this.http.get(this.listSeriesUrl).subscribe((data: IListSeries) => {\n      this.valueSeries$.next(data.list);\n      this.response = data.list;\n    });\n  }\n\n  public getResponse(): IDataSeries[] {\n    return this.response;\n  }\n\n  public transferData(value: Array<IDataSeries>): void {\n    this.valueSeries$.next(value);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}